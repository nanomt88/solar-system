<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 引入配置文件  -->
	<context:property-placeholder location="classpath:config.properties" />
	
    <!-- 配置数据源 -->
    <bean id="dataSource" class="org.logicalcobwebs.proxool.ProxoolDataSource">
        <property name="driver" value="${jdbc.driver}" />
        <property name="driverUrl" value="${jdbc.url}" />
        <property name="user" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <property name="minimumConnectionCount" value="${jdbc.minConnection}" />
        <property name="maximumConnectionCount" value="${jdbc.maxConnection}" />
        <property name="maximumConnectionLifetime" value="${jdbc.maxConnectionLife}" />
        <property name="maximumActiveTime" value="${jdbc.maxActiveTime}" />
        <property name="prototypeCount" value="${jdbc.prototypeCount}" />
        <property name="houseKeepingTestSql" value="${jdbc.testSql}" />
    </bean>

	<!-- 配置数据源 -->
	<!--<bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
		<!--&lt;!&ndash; 基本属性 url、user、password &ndash;&gt;-->
		<!--<property name="url" value="${datasource.url}" />-->
		<!--<property name="username" value="${datasource.username}" />-->
		<!--<property name="password" value="${datasource.password}" />-->

		<!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
		<!--<property name="initialSize" value="${druid.initialSize}" />-->
		<!--<property name="minIdle" value="${druid.minIdle}" />-->
		<!--<property name="maxActive" value="${druid.maxActive}" />-->

		<!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
		<!--<property name="maxWait" value="${druid.maxWait}" />-->

		<!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
		<!--<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}" />-->

		<!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
		<!--<property name="minEvictableIdleTimeMillis" value="${druid.minEvictableIdleTimeMillis}" />-->

		<!--&lt;!&ndash; 配置连接池的测试开关 &ndash;&gt;-->
		<!--<property name="validationQuery" value="${druid.validationQuery}" />-->
		<!--<property name="testWhileIdle" value="${druid.testWhileIdle}" />-->
		<!--<property name="testOnBorrow" value="${druid.testOnBorrow}" />-->
		<!--<property name="testOnReturn" value="${druid.testOnReturn}" />-->

		<!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;-->
		<!--<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}" />-->
		<!--<property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}" />-->
		<!--&lt;!&ndash;关闭长时间不使用的连接 &ndash;&gt;-->
		<!--<property name="removeAbandoned" value="${druid.removeAbandoned}" />-->
		<!--&lt;!&ndash; 单位：秒 &ndash;&gt;-->
		<!--<property name="removeAbandonedTimeout" value="${druid.removeAbandonedTimeout}" />-->
		<!--&lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;-->
		<!--<property name="logAbandoned" value="${druid.logAbandoned}" />-->
		<!--&lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;-->
		<!--<property name="filters" value="${druid.filters}" />-->
	<!--</bean>-->
	
	
	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!-- 注解解析 -->
	<context:annotation-config />
	
	<!-- 扫描所有spring bean注解 -->
    <context:component-scan base-package="com.nanomt88.solar.data" />
	
	<!-- 动态代理 -->
	<aop:aspectj-autoproxy/>
	
</beans>